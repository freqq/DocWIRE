apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        service: {{ .Chart.Name }}
    name: {{ .Chart.Name }}
spec:
    replicas: 1
    selector:
        matchLabels:
            app: {{ .Chart.Name }}
    template:
        metadata:
            labels:
                app: {{ .Chart.Name }}
        spec:
            securityContext:
              runAsUser: 1000
            containers:
            - name: {{ .Chart.Name }}
              image: {{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              readinessProbe:
                httpGet:
                  path: /
                  port: {{ .Values.config.frontend.port }}
                  scheme: HTTPS
                timeoutSeconds: {{ .Values.healthCheck.frontend.readinessProbe.timeoutSeconds }}
                initialDelaySeconds: {{ .Values.healthCheck.frontend.readinessProbe.initialDelaySeconds }}
                periodSeconds: {{ .Values.healthCheck.frontend.readinessProbe.periodSeconds }}
                failureThreshold: {{ .Values.healthCheck.frontend.readinessProbe.failureThreshold }}
              ports:
              - name: https-port
                containerPort: {{ .Values.config.frontend.port }}
              {{- if .Values.profile.frontend.devProfile }}
              command: ["/bin/sh", "-c"]
              args: [ "yarn --cwd {{ .Values.profile.frontend.devDirectory }} start" ]
              {{- else }}
              command: ["/bin/sh", "-c"]
              args: ["node --max-http-header-size={{ .Values.maxHttpHeaderSize }} server.js"]
              {{- end }}
              volumeMounts:
                {{- if .Values.profile.frontend.devProfile }}
                - name: dev-directory
                  mountPath: {{ .Values.profile.frontend.devDirectory }}
                {{- end }}
              resources:
{{ toYaml .Values.profile.frontend.resources | indent 16 }}
              env:
                - name: PORT
                  value: "{{ .Values.config.frontend.port }}"
                - name: PUBLIC_PATH
                  value: '/'
                - name: KEYCLOAK_HOST
                  value: {{ .Values.config.authService.hostname }}-svc
                - name: KEYCLOAK_PORT
                  value: "{{ .Values.config.authService.port }}"
            volumes:
              {{- if .Values.profile.frontend.devProfile }}
              - name: dev-directory
                hostPath:
                  path: {{ .Values.frontPath }}
                  type: Directory
              {{- end }}