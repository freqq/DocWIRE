version: "3.7"

services:
    #frontend:
    #    image: freq/frontend:v1
    #    container_name: frontend
    #    restart: always
    #    ports:
    #      - "9040:9040"
    #    networks:
    #      - docwire_network

    keycloak:
        image: jboss/keycloak:11.0.0
        container_name: keycloak
        restart: on-failure
        command:
            - "-b"
            - "0.0.0.0"
            - "-Djboss.http.port=8081"
            - "-Dkeycloak.migration.action=import"
            - "-Dkeycloak.migration.provider=dir"
            - "-Dkeycloak.migration.dir=/config"
            - "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING"
            - "-Dkeycloak.profile.feature.account_api=enabled"
        networks:
            docwire_network:
                aliases:
                    - docwire.test
        volumes:
            - ./keycloak/config:/config/
            - ./keycloak/login-theme/:/opt/jboss/keycloak/themes/login-theme/
            - ./keycloak/keys/certificate.crt:/etc/x509/https/tls.crt
            - ./keycloak/keys/privateKey.key:/etc/x509/https/tls.key
        environment:
            - KEYCLOAK_USER=admin
            - KEYCLOAK_PASSWORD=password
            - DB_VENDOR=postgres
            - DB_USER=admin
            - DB_PASSWORD=password
            - DB_ADDR=keycloak-db
            - DB_PORT=5432
            - DB_DATABASE=keycloakdb
        ports:
            - "8081:8081"
        depends_on:
            - keycloak-db
        healthcheck:
            test: "curl -f http://docwire.test:8081/auth || exit 1"
            start_period: 30s

    keycloak-db:
        image: postgres:10
        container_name: keycloak-db
        environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: password
            POSTGRES_DB: keycloakdb
        volumes:
            - keycloak_db:/var/lib/postgresql/data
        networks:
            - docwire_network

    account-service:
        image: freq/account-service:v1
        container_name: account-service
        ports:
            - "8080:8080"
        depends_on:
            - account-service-db
        environment:
            - SPRING_DATA_MONGODB_HOST=account-service-db
            - SPRING_DATA_MONGODB_PORT=27020
            - SPRING_DATA_MONGODB_DATABASE=account_service_db
            - "SPRING_PROFILES_ACTIVE=dev,swagger,dev-cal"
        networks:
            - docwire_network

    messages-service:
        image: freq/messages-service:v1
        container_name: messages-service
        ports:
            - "8085:8085"
        depends_on:
            - messages-service-db
        environment:
            - SPRING_DATA_MONGODB_HOST=messages-service-db
            - SPRING_DATA_MONGODB_PORT=27021
            - SPRING_DATA_MONGODB_DATABASE=messages_service_db
            - "SPRING_PROFILES_ACTIVE=dev,swagger,dev-cal"
        networks:
            - docwire_network

    account-service-db:
        image: mongo:4.2
        container_name: account-service-db
        command: mongod --port 27020
        ports:
            - "27020:27020"
        networks:
            - docwire_network

    messages-service-db:
        image: mongo:4.2
        container_name: messages-service-db
        command: mongod --port 27021
        ports:
            - "27021:27021"
        networks:
            - docwire_network
    
    rabbitmq:
        image: rabbitmq:3.6-management-alpine
        container_name: rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=password
        ports:
            - '5672:5672' # The standard AMQP protocol port
            - '15672:15672' # HTTP management UI
        networks:
            - docwire_network

networks:
    docwire_network:

volumes: 
    keycloak_db: